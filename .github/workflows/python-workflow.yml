name: Python application
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    # - name: Cache pip
    #   uses: actions/cache@v2
    #   with:
    #     # This path is specific to Ubuntu
    #     path: ~/.cache/pip
    #     # Look to see if there is a cache hit for the corresponding requirements file
    #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-
    #       ${{ runner.os }}-
    - name: Install dependencies
      run:
        python -m pip install --upgrade pip
        pip install -r build/requirements.txt
    - name: Basics test
      run: |
        pytest --ignore test/data/
    - name: Check out the repo
      uses: actions/checkout@v2
      with:
        fetch-depth: "0"
    - name: Github Tag Bump
      uses: anothrNick/github-tag-action@1.34.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        RELEASE_BRANCHES: main
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false

  build-and-push-image:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Log in to GitHub Docker Registry
          uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
          with:
            registry: docker.pkg.github.com
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build and push Docker image
          uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
          with:
            context: build/.
            push: true
            tags: |
              docker.pkg.github.com/${{ github.repository }}/latest:${{ github.sha }}


# steps:
# - uses: actions/checkout@v2
# - name: Setup Python
#   uses: actions/setup-python@v2
#   with:
#     python-version: '3.x'
# - name: Cache pip
#   uses: actions/cache@v2
#   with:
#     # This path is specific to Ubuntu
#     path: ~/.cache/pip
#     # Look to see if there is a cache hit for the corresponding requirements file
#     key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
#     restore-keys: |
#       ${{ runner.os }}-pip-
#       ${{ runner.os }}-
# - name: Install dependencies
#   run: pip install -r requirements.txt
# https://docs.github.com/es/actions/guides/building-and-testing-python#installing-dependencies
# https://docs.github.com/en/enterprise-server@2.22/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#publishing-a-package-using-an-action
# https://github.com/docker/build-push-action
