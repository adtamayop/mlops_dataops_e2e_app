# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Python application

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Caching
        uses: actions/cache@v2
        with:
          path: $/{/{ env.pythonLocation /}/}
          key: $/{/{ env.pythonLocation /}/}-$/{/{ hashFiles('./build/requirements.txt') /}/}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pip==20.3
          pip install --use-deprecated=legacy-resolver -r ./build/requirements.txt
      - name: Test with pytest
        run: |
          echo $(pwd)
          echo $(ls -h)
          dvc remote modify storage gdrive_user_credentials_file ./build/gdrive-user-credentials.json
          dvc pull
          rm -r tests/coverage_report/*
          pytest -k-PipelineEndToEndTest --cov tests --cov src --cov pipeline_local.py --cov pipeline_airflow.py --cov-report html:tests/coverage_report/
        # pytest tests/test_code/
        # pytest tests/test_data/
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Github Tag Bump
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: main
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: ./Dockerfile
          registry: docker.pkg.github.com
          repository: adtamayop/trading_tfx/tfx_pipeline
          tag_with_ref: true
